(def integers (iterate inc 0))


;;;; 1
(def imap
     (fn [f sequence]
       (map f integers sequence)))

(def imap
     (fn [f sequence]
       (map (partial apply f)
            (partition 2 (interleave integers [:a :b :c])))))


;;;; 2 
       
(def fact
     (fn [n]
       (apply * (range 2 (inc n)))))

;; user> (fact 5)
;; 120
;; user> (fact 2)
;; 2
;; user> (fact 1)
;; 1
;; user> (fact 0)
;; 1

;;;; 3

;; user> (def factorials (map fact integers))
;; #'user/factorials
;; user> (nth factorials 500)
;; 1220136825991110068701238785423046926253574342803192842192413588385845373153881997605
;; 4964475022032818630136164771482035841633787220781772004807852051593292854779075719393
;; 3060377296085908627042917454788242491272634430567017327076946106280231045264421887878
;; 9465754777149863494367781037644274033827365397471386477878495438489595537537990423241
;; 0612713269843277457155463099772027810145610811883737095310163563244329870295638966289
;; 1165897476957208792692887128178007026517450776841071962439039432253642260523494585012
;; 9918571501248706961568141625359056693423813008856249246891564126775654481886506593847
;; 9517753608940057452389403357984763639449053130623237490664450488246650759467358620746
;; 3792518420045936969298102226397195259719094521782333175693458150855233282076282002340
;; 2626907898342451712006207714640979456116127629145951237229913340169552363850942885592
;; 0187274337951730145863575708283557801587354327688886801203998823847021514676054454076
;; 6353598417443048012893831389688163948746965881750450692636533817505547812864000000000
;; 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; 000000000000000000000000000000

